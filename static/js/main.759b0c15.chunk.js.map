{"version":3,"sources":["apis/jsonPlaceHolder.js","actions/index.js","components/UserHeader.js","components/PostList.js","components/App.js","reducers/index.js","reducers/postsReducer.js","reducers/userReducer.js","index.js"],"names":["axios","create","baseURL","fetchPosts","_ref2","Object","asyncToGenerator","regenerator_default","a","mark","_callee2","dispatch","response","wrap","_context2","prev","next","jsonPlaceHolder","get","sent","type","payload","data","stop","_x3","apply","this","arguments","fetchUser","id","_ref3","_callee3","_context3","concat","_x4","UserHeader","user","props","react_default","createElement","className","name","React","Component","connect","state","ownProps","users","find","userId","PostList","fetchPostsAndUsers","posts","map","post","key","title","body","components_UserHeader","renderList","_ref","_callee","getState","_context","_","uniq","forEach","_x","_x2","App","components_PostList","combineReducers","length","undefined","action","toConsumableArray","store","createStore","reducers","applyMiddleware","thunk","ReactDOM","render","es","components_App","document","querySelector"],"mappings":"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","file":"static/js/main.759b0c15.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nexport default axios.create({\r\n    baseURL: 'https://jsonplaceholder.typicode.com'\r\n});","import _ from 'lodash';\r\nimport jsonPlaceHolder from '../apis/jsonPlaceHolder';\r\n\r\n// action creators\r\n\r\nexport const fetchPostsAndUsers = () => async (dispatch, getState) => {\r\n    await dispatch(fetchPosts() );\r\n    const userIds = _.uniq(_.map(getState().posts, 'userId'));\r\n    userIds.forEach(userId => {\r\n        return dispatch(fetchUser(userId));\r\n    });\r\n};\r\n\r\nexport const fetchPosts = () => {\r\n    return async dispatch => {\r\n        const response = await jsonPlaceHolder.get('/posts');       \r\n        dispatch({ type: 'FETCH_POSTS', payload: response.data });\r\n    };\r\n};\r\n\r\nexport const fetchUser = id => {\r\n    return async dispatch => {\r\n        const response = await jsonPlaceHolder.get(`/users/${id}`);\r\n        dispatch({type: 'FETCH_USER', payload: response.data});\r\n    };\r\n};\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nclass UserHeader extends React.Component {\r\n\r\n    render() {\r\n        const { user } = this.props;\r\n        if (!user) {\r\n            return null;\r\n        }\r\n        return (\r\n            <div className='header'>{user.name}</div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return { user: state.users.find(user => user.id === ownProps.userId) };\r\n  };\r\n\r\nexport default connect(mapStateToProps)(UserHeader);  "," import React from 'react';\r\n import { connect } from 'react-redux';\r\n import { fetchPostsAndUsers } from '../actions';\r\n import UserHeader from './UserHeader';\r\n\r\n class PostList extends React.Component {\r\n    componentDidMount() {\r\n        this.props.fetchPostsAndUsers();\r\n    }\r\n\r\n    renderList() {\r\n        return this.props.posts.map(post => {\r\n            return(\r\n                <div className=\"item\" key={post.id}>\r\n                    <i className=\"large middle aligned icon user\" />\r\n                    <div className=\"content\">\r\n                        <div className=\"description\">\r\n                            <h2>{post.title}</h2>\r\n                            <p>{post.body}</p>\r\n                        </div>\r\n                        <UserHeader userId={post.userId} />\r\n                    </div>\r\n                </div>\r\n            )\r\n        })\r\n\r\n    }\r\n\r\n    render() {  \r\n        return(\r\n            <div className=\"ui relaxed divided list\">\r\n               {this.renderList()}\r\n            </div>\r\n        )\r\n    }\r\n }\r\n\r\n const mapStateToProps = state => {\r\n     return { posts: state.posts };\r\n }\r\n\r\n export default connect(\r\n    mapStateToProps, \r\n    { fetchPostsAndUsers }\r\n    )(PostList);   ","import React from 'react';\r\nimport PostList from './PostList'\r\n\r\nconst App = () => {\r\n    return (\r\n        <div className=\"ui container\">\r\n            <PostList />\r\n        </div>   \r\n    )\r\n}\r\n\r\nexport default App;","import { combineReducers } from 'redux';\r\nimport postsReducer from './postsReducer';\r\nimport userReducer from './userReducer';\r\n\r\nexport default combineReducers({\r\n    posts: postsReducer,\r\n    users: userReducer\r\n});","export default (state = [], action) => {\r\n    switch (action.type) {\r\n        case \"FETCH_POSTS\":\r\n            return action.payload;\r\n        default:\r\n            return state;\r\n    }\r\n};","export default ( state = [], action ) => {\r\n    switch (action.type) {\r\n        case \"FETCH_USER\":\r\n            return [...state, action.payload];\r\n        default:\r\n            return state;\r\n    }\r\n};","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App';\r\nimport { Provider } from 'react-redux';\r\nimport { createStore, applyMiddleware } from 'redux';\r\nimport reducers from './reducers';\r\nimport thunk from 'redux-thunk'\r\n\r\nconst store = createStore(reducers, applyMiddleware(thunk) )\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <App />\r\n    </Provider>, \r\n    document.querySelector('#root')\r\n);"],"sourceRoot":""}